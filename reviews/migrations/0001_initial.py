# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-08-20 14:09
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_enumfield.db.fields
import durationfield.db.models.fields.duration
import reviews.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email Address')),
                ('date_of_birth', models.DateField()),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('is_admin', models.BooleanField(default=False)),
                ('user_type', django_enumfield.db.fields.EnumField(default=1, enum=reviews.models.UserType)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('length', durationfield.db.models.fields.duration.DurationField(blank=True)),
                ('cover_url', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('length', durationfield.db.models.fields.duration.DurationField(blank=True)),
                ('cover_url', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('length', durationfield.db.models.fields.duration.DurationField(blank=True)),
                ('cover_url', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupCreator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('length', durationfield.db.models.fields.duration.DurationField(blank=True)),
                ('cover_url', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseCreator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(blank=True, max_length=100000, null=True)),
                ('grade', models.CharField(choices=[('A', 'A'), ('A-', 'A-'), ('B+', 'B+'), ('B', 'B'), ('B-', 'B-'), ('C+', 'C+'), ('C', 'C'), ('C-', 'C-'), ('D+', 'D+'), ('D', 'D'), ('D-', 'D-'), ('F', 'F')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('length', durationfield.db.models.fields.duration.DurationField(blank=True)),
                ('cover_url', models.CharField(blank=True, max_length=500)),
                ('album', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='reviews.Album')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.ReleaseCreator')),
                ('group_creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.GroupCreator')),
                ('review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='reviews.Review')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TVEpisode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('length', durationfield.db.models.fields.duration.DurationField(blank=True)),
                ('cover_url', models.CharField(blank=True, max_length=500)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.ReleaseCreator')),
                ('group_creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.GroupCreator')),
                ('review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='reviews.Review')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TVSeason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('length', durationfield.db.models.fields.duration.DurationField(blank=True)),
                ('cover_url', models.CharField(blank=True, max_length=500)),
                ('network', django_enumfield.db.fields.EnumField(default='ABC', enum=reviews.models.Network)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.ReleaseCreator')),
                ('group_creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.GroupCreator')),
                ('review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='reviews.Review')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TVSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('length', durationfield.db.models.fields.duration.DurationField(blank=True)),
                ('cover_url', models.CharField(blank=True, max_length=500)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.ReleaseCreator')),
                ('group_creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.GroupCreator')),
                ('review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='reviews.Review')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='tvseason',
            name='tv_series',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='reviews.TVSeries'),
        ),
        migrations.AddField(
            model_name='tvepisode',
            name='tv_season',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='reviews.TVSeason'),
        ),
        migrations.AddField(
            model_name='movie',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.ReleaseCreator'),
        ),
        migrations.AddField(
            model_name='movie',
            name='group_creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.GroupCreator'),
        ),
        migrations.AddField(
            model_name='movie',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movies', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='movie',
            name='review',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='reviews.Review'),
        ),
        migrations.AddField(
            model_name='game',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.ReleaseCreator'),
        ),
        migrations.AddField(
            model_name='game',
            name='group_creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.GroupCreator'),
        ),
        migrations.AddField(
            model_name='game',
            name='review',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='reviews.Review'),
        ),
        migrations.AddField(
            model_name='book',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.ReleaseCreator'),
        ),
        migrations.AddField(
            model_name='book',
            name='group_creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.GroupCreator'),
        ),
        migrations.AddField(
            model_name='book',
            name='review',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='reviews.Review'),
        ),
        migrations.AddField(
            model_name='album',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.ReleaseCreator'),
        ),
        migrations.AddField(
            model_name='album',
            name='group_creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reviews.GroupCreator'),
        ),
        migrations.AddField(
            model_name='album',
            name='review',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='reviews.Review'),
        ),
    ]
